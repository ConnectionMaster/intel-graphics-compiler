;=========================== begin_copyright_notice ============================
;
; Copyright (C) 2023 Intel Corporation
;
; SPDX-License-Identifier: MIT
;
;============================ end_copyright_notice =============================
;
; RUN: igc_opt %s -S -o - -igc-stateless-to-stateful-resolution --target-addressing-mode bindless | FileCheck %s
; ------------------------------------------------
; PromoteStatelessToBindless : Test promotion of block read and write to bindless addressing
; ------------------------------------------------

; Source:
; kernel void test_promote(global int* src, global int* dst, int runtimeOffset)
; {
;     uint v = intel_sub_group_block_read(&src[runtimeOffset]);
;     intel_sub_group_block_write(&dst[runtimeOffset], v);
; }

; CHECK-LABEL: @test_promote
; CHECK: [[RUNTIME_OFFSET:%.*]] = sext i32 %runtimeOffset to i64
; CHECK: [[TMP0:%.*]] = trunc i64 [[RUNTIME_OFFSET]] to i32
; CHECK: [[TMP1:%.*]] = mul i32 [[TMP0]], 4
; CHECK: [[BYTE_OFFSET0:%.*]] = add i32 %bufferOffset, [[TMP1]]
; CHECK: [[BASEPTR_SRC:%.*]] = inttoptr i32 %bindlessOffset to i32 addrspace(2490368)*
; CHECK: [[LOADED_VALUE:%.*]] = call i32 @llvm.genx.GenISA.simdBlockReadBindless.i32.p2490368i32.i32(i32 addrspace(2490368)* [[BASEPTR_SRC]], i32 [[BYTE_OFFSET0]])
; CHECK: [[TMP2:%.*]] = trunc i64 [[RUNTIME_OFFSET]] to i32
; CHECK: [[TMP3:%.*]] = mul i32 [[TMP2]], 4
; CHECK: [[BYTE_OFFSET1:%.*]] = add i32 %bufferOffset1, [[TMP3]]
; CHECK: [[BASEPTR_DST:%.*]] = inttoptr i32 %bindlessOffset2 to i32 addrspace(2490368)*
; CHECK: call void @llvm.genx.GenISA.simdBlockWriteBindless.p2490368i32.i32.i32(i32 addrspace(2490368)* [[BASEPTR_DST]], i32 [[LOADED_VALUE]], i32 [[BYTE_OFFSET1]])

define spir_kernel void @test_promote(i32 addrspace(1)* %src, i32 addrspace(1)* %dst, i32 %runtimeOffset, <8 x i32> %r0, <8 x i32> %payloadHeader, i32 %bufferOffset, i32 %bufferOffset1, i32 %bindlessOffset, i32 %bindlessOffset2) #0 {
entry:
  %idxprom = sext i32 %runtimeOffset to i64
  %arrayidx = getelementptr inbounds i32, i32 addrspace(1)* %src, i64 %idxprom
  %0 = call i32 @llvm.genx.GenISA.simdBlockRead.i32.p1i32(i32 addrspace(1)* %arrayidx)
  %arrayidx2 = getelementptr inbounds i32, i32 addrspace(1)* %dst, i64 %idxprom
  call void @llvm.genx.GenISA.simdBlockWrite.p1i32.i32(i32 addrspace(1)* %arrayidx2, i32 %0)
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @llvm.genx.GenISA.simdBlockRead.i32.p1i32(i32 addrspace(1)*) #2

; Function Attrs: nounwind
declare void @llvm.genx.GenISA.simdBlockWrite.p1i32.i32(i32 addrspace(1)*, i32) #3

attributes #0 = { convergent nounwind "less-precise-fpmad"="true" }
attributes #1 = { convergent "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" }
attributes #2 = { nounwind readonly }
attributes #3 = { nounwind }

!spirv.MemoryModel = !{!0}
!spirv.Source = !{!1}
!spirv.Generator = !{!2}
!igc.functions = !{!3}
!IGCMetadata = !{!15}
!opencl.ocl.version = !{!330, !330, !330, !330, !330}
!opencl.spir.version = !{!330, !330, !330, !330, !330}
!llvm.ident = !{!331, !331, !331, !331, !331}
!llvm.module.flags = !{!332}

!0 = !{i32 2, i32 2}
!1 = !{i32 3, i32 102000}
!2 = !{i16 6, i16 14}
!3 = !{void (i32 addrspace(1)*, i32 addrspace(1)*, i32, <8 x i32>, <8 x i32>, i32, i32, i32, i32)* @test_promote, !4}
!4 = !{!5, !6}
!5 = !{!"function_type", i32 0}
!6 = !{!"implicit_arg_desc", !7, !8, !9, !11, !13, !14}
!7 = !{i32 0}
!8 = !{i32 1}
!9 = !{i32 14, !10}
!10 = !{!"explicit_arg_num", i32 0}
!11 = !{i32 14, !12}
!12 = !{!"explicit_arg_num", i32 1}
!13 = !{i32 57, !10}
!14 = !{i32 57, !12}
!15 = !{!"ModuleMD", !16, !17, !90, !186, !217, !233, !253, !263, !265, !266, !279, !280, !281, !282, !286, !287, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !306, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !150, !321, !322, !323, !325, !328, !329}
!16 = !{!"isPrecise", i1 false}
!17 = !{!"compOpt", !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89}
!18 = !{!"DenormsAreZero", i1 false}
!19 = !{!"BFTFDenormsAreZero", i1 false}
!20 = !{!"CorrectlyRoundedDivSqrt", i1 false}
!21 = !{!"OptDisable", i1 false}
!22 = !{!"MadEnable", i1 true}
!23 = !{!"NoSignedZeros", i1 false}
!24 = !{!"NoNaNs", i1 false}
!25 = !{!"FloatRoundingMode", i32 0}
!26 = !{!"FloatCvtIntRoundingMode", i32 3}
!27 = !{!"LoadCacheDefault", i32 4}
!28 = !{!"StoreCacheDefault", i32 7}
!29 = !{!"VISAPreSchedRPThreshold", i32 0}
!30 = !{!"SetLoopUnrollThreshold", i32 0}
!31 = !{!"UnsafeMathOptimizations", i1 false}
!32 = !{!"disableCustomUnsafeOpts", i1 false}
!33 = !{!"disableReducePow", i1 false}
!34 = !{!"disableSqrtOpt", i1 false}
!35 = !{!"FiniteMathOnly", i1 false}
!36 = !{!"FastRelaxedMath", i1 false}
!37 = !{!"DashGSpecified", i1 false}
!38 = !{!"FastCompilation", i1 false}
!39 = !{!"UseScratchSpacePrivateMemory", i1 true}
!40 = !{!"RelaxedBuiltins", i1 false}
!41 = !{!"SubgroupIndependentForwardProgressRequired", i1 true}
!42 = !{!"GreaterThan2GBBufferRequired", i1 true}
!43 = !{!"GreaterThan4GBBufferRequired", i1 false}
!44 = !{!"DisableA64WA", i1 false}
!45 = !{!"ForceEnableA64WA", i1 false}
!46 = !{!"PushConstantsEnable", i1 true}
!47 = !{!"HasPositivePointerOffset", i1 false}
!48 = !{!"HasBufferOffsetArg", i1 true}
!49 = !{!"BufferOffsetArgOptional", i1 true}
!50 = !{!"replaceGlobalOffsetsByZero", i1 false}
!51 = !{!"forcePixelShaderSIMDMode", i32 0}
!52 = !{!"pixelShaderDoNotAbortOnSpill", i1 false}
!53 = !{!"UniformWGS", i1 false}
!54 = !{!"disableVertexComponentPacking", i1 false}
!55 = !{!"disablePartialVertexComponentPacking", i1 false}
!56 = !{!"PreferBindlessImages", i1 true}
!57 = !{!"UseBindlessMode", i1 true}
!58 = !{!"UseLegacyBindlessMode", i1 false}
!59 = !{!"disableMathRefactoring", i1 false}
!60 = !{!"atomicBranch", i1 false}
!61 = !{!"ForceInt32DivRemEmu", i1 false}
!62 = !{!"ForceInt32DivRemEmuSP", i1 false}
!63 = !{!"DisableFastestSingleCSSIMD", i1 false}
!64 = !{!"DisableFastestLinearScan", i1 false}
!65 = !{!"UseStatelessforPrivateMemory", i1 false}
!66 = !{!"EnableTakeGlobalAddress", i1 false}
!67 = !{!"IsLibraryCompilation", i1 false}
!68 = !{!"FastVISACompile", i1 false}
!69 = !{!"MatchSinCosPi", i1 false}
!70 = !{!"ExcludeIRFromZEBinary", i1 false}
!71 = !{!"EmitZeBinVISASections", i1 false}
!72 = !{!"FP64GenEmulationEnabled", i1 false}
!73 = !{!"allowDisableRematforCS", i1 false}
!74 = !{!"DisableIncSpillCostAllAddrTaken", i1 false}
!75 = !{!"DisableCPSOmaskWA", i1 false}
!76 = !{!"DisableFastestGopt", i1 false}
!77 = !{!"WaForceHalfPromotionComputeShader", i1 false}
!78 = !{!"WaForceHalfPromotionPixelVertexShader", i1 false}
!79 = !{!"DisableConstantCoalescing", i1 false}
!80 = !{!"EnableUndefAlphaOutputAsRed", i1 true}
!81 = !{!"WaEnableALTModeVisaWA", i1 false}
!82 = !{!"NewSpillCostFunction", i1 false}
!83 = !{!"ForceLargeGRFNum4RQ", i1 false}
!84 = !{!"DisableEUFusion", i1 false}
!85 = !{!"DisableFDivToFMulInvOpt", i1 false}
!86 = !{!"initializePhiSampleSourceWA", i1 false}
!87 = !{!"WaDisableSubspanUseNoMaskForCB", i1 false}
!88 = !{!"DisableLoosenSimd32Occu", i1 false}
!89 = !{!"FastestS1Options", i32 0}
!90 = !{!"FuncMD", !91, !92}
!91 = !{!"FuncMDMap[0]", void (i32 addrspace(1)*, i32 addrspace(1)*, i32, <8 x i32>, <8 x i32>, i32, i32, i32, i32)* @test_promote}
!92 = !{!"FuncMDValue[0]", !93, !94, !98, !99, !100, !121, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !161, !165, !169, !173, !177, !181, !182}
!93 = !{!"localOffsets"}
!94 = !{!"workGroupWalkOrder", !95, !96, !97}
!95 = !{!"dim0", i32 0}
!96 = !{!"dim1", i32 0}
!97 = !{!"dim2", i32 0}
!98 = !{!"funcArgs"}
!99 = !{!"functionType", !"KernelFunction"}
!100 = !{!"rtInfo", !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !120}
!101 = !{!"callableShaderType", !"NumberOfCallableShaderTypes"}
!102 = !{!"isContinuation", i1 false}
!103 = !{!"hasTraceRayPayload", i1 false}
!104 = !{!"hasHitAttributes", i1 false}
!105 = !{!"hasCallableData", i1 false}
!106 = !{!"ShaderStackSize", i32 0}
!107 = !{!"ShaderHash", i64 0}
!108 = !{!"ShaderName", !""}
!109 = !{!"ParentName", !""}
!110 = !{!"SlotNum", i1* null}
!111 = !{!"NOSSize", i32 0}
!112 = !{!"globalRootSignatureSize", i32 0}
!113 = !{!"Entries"}
!114 = !{!"SpillUnions"}
!115 = !{!"CustomHitAttrSizeInBytes", i32 0}
!116 = !{!"Types", !117, !118, !119}
!117 = !{!"FrameStartTys"}
!118 = !{!"ArgumentTys"}
!119 = !{!"FullFrameTys"}
!120 = !{!"Aliases"}
!121 = !{!"resAllocMD", !122, !123, !124, !125, !141}
!122 = !{!"uavsNumType", i32 4}
!123 = !{!"srvsNumType", i32 0}
!124 = !{!"samplersNumType", i32 0}
!125 = !{!"argAllocMDList", !126, !130, !132, !135, !136, !137, !138, !139, !140}
!126 = !{!"argAllocMDListVec[0]", !127, !128, !129}
!127 = !{!"type", i32 1}
!128 = !{!"extensionType", i32 -1}
!129 = !{!"indexType", i32 2}
!130 = !{!"argAllocMDListVec[1]", !127, !128, !131}
!131 = !{!"indexType", i32 3}
!132 = !{!"argAllocMDListVec[2]", !133, !128, !134}
!133 = !{!"type", i32 0}
!134 = !{!"indexType", i32 -1}
!135 = !{!"argAllocMDListVec[3]", !133, !128, !134}
!136 = !{!"argAllocMDListVec[4]", !133, !128, !134}
!137 = !{!"argAllocMDListVec[5]", !133, !128, !134}
!138 = !{!"argAllocMDListVec[6]", !133, !128, !134}
!139 = !{!"argAllocMDListVec[7]", !133, !128, !134}
!140 = !{!"argAllocMDListVec[8]", !133, !128, !134}
!141 = !{!"inlineSamplersMD"}
!142 = !{!"maxByteOffsets"}
!143 = !{!"IsInitializer", i1 false}
!144 = !{!"IsFinalizer", i1 false}
!145 = !{!"CompiledSubGroupsNumber", i32 0}
!146 = !{!"hasInlineVmeSamplers", i1 false}
!147 = !{!"localSize", i32 0}
!148 = !{!"localIDPresent", i1 false}
!149 = !{!"groupIDPresent", i1 false}
!150 = !{!"privateMemoryPerWI", i32 0}
!151 = !{!"globalIDPresent", i1 false}
!152 = !{!"hasSyncRTCalls", i1 false}
!153 = !{!"hasNonKernelArgLoad", i1 false}
!154 = !{!"hasNonKernelArgStore", i1 false}
!155 = !{!"hasNonKernelArgAtomic", i1 false}
!156 = !{!"UserAnnotations"}
!157 = !{!"m_OpenCLArgAddressSpaces", !158, !159, !160}
!158 = !{!"m_OpenCLArgAddressSpacesVec[0]", i32 1}
!159 = !{!"m_OpenCLArgAddressSpacesVec[1]", i32 1}
!160 = !{!"m_OpenCLArgAddressSpacesVec[2]", i32 0}
!161 = !{!"m_OpenCLArgAccessQualifiers", !162, !163, !164}
!162 = !{!"m_OpenCLArgAccessQualifiersVec[0]", !"none"}
!163 = !{!"m_OpenCLArgAccessQualifiersVec[1]", !"none"}
!164 = !{!"m_OpenCLArgAccessQualifiersVec[2]", !"none"}
!165 = !{!"m_OpenCLArgTypes", !166, !167, !168}
!166 = !{!"m_OpenCLArgTypesVec[0]", !"uint*"}
!167 = !{!"m_OpenCLArgTypesVec[1]", !"uint*"}
!168 = !{!"m_OpenCLArgTypesVec[2]", !"int"}
!169 = !{!"m_OpenCLArgBaseTypes", !170, !171, !172}
!170 = !{!"m_OpenCLArgBaseTypesVec[0]", !"int*"}
!171 = !{!"m_OpenCLArgBaseTypesVec[1]", !"int*"}
!172 = !{!"m_OpenCLArgBaseTypesVec[2]", !"int"}
!173 = !{!"m_OpenCLArgTypeQualifiers", !174, !175, !176}
!174 = !{!"m_OpenCLArgTypeQualifiersVec[0]", !""}
!175 = !{!"m_OpenCLArgTypeQualifiersVec[1]", !""}
!176 = !{!"m_OpenCLArgTypeQualifiersVec[2]", !""}
!177 = !{!"m_OpenCLArgNames", !178, !179, !180}
!178 = !{!"m_OpenCLArgNamesVec[0]", !"src"}
!179 = !{!"m_OpenCLArgNamesVec[1]", !"dst"}
!180 = !{!"m_OpenCLArgNamesVec[2]", !"runtimeOffset"}
!181 = !{!"m_OpenCLArgScalarAsPointers"}
!182 = !{!"m_OptsToDisablePerFunc", !183, !184, !185}
!183 = !{!"m_OptsToDisablePerFuncSet[0]", !"IGC-AddressArithmeticSinking"}
!184 = !{!"m_OptsToDisablePerFuncSet[1]", !"IGC-AllowSimd32Slicing"}
!185 = !{!"m_OptsToDisablePerFuncSet[2]", !"IGC-SinkLoadOpt"}
!186 = !{!"pushInfo", !187, !188, !189, !193, !194, !195, !196, !197, !198, !199, !200, !213, !214, !215, !216}
!187 = !{!"pushableAddresses"}
!188 = !{!"bindlessPushInfo"}
!189 = !{!"dynamicBufferInfo", !190, !191, !192}
!190 = !{!"firstIndex", i32 0}
!191 = !{!"numOffsets", i32 0}
!192 = !{!"forceDisabled", i1 false}
!193 = !{!"MaxNumberOfPushedBuffers", i32 0}
!194 = !{!"inlineConstantBufferSlot", i32 -1}
!195 = !{!"inlineConstantBufferOffset", i32 -1}
!196 = !{!"inlineConstantBufferGRFOffset", i32 -1}
!197 = !{!"constants"}
!198 = !{!"inputs"}
!199 = !{!"constantReg"}
!200 = !{!"simplePushInfoArr", !201, !210, !211, !212}
!201 = !{!"simplePushInfoArrVec[0]", !202, !203, !204, !205, !206, !207, !208, !209}
!202 = !{!"cbIdx", i32 0}
!203 = !{!"pushableAddressGrfOffset", i32 -1}
!204 = !{!"pushableOffsetGrfOffset", i32 -1}
!205 = !{!"offset", i32 0}
!206 = !{!"size", i32 0}
!207 = !{!"isStateless", i1 false}
!208 = !{!"isBindless", i1 false}
!209 = !{!"simplePushLoads"}
!210 = !{!"simplePushInfoArrVec[1]", !202, !203, !204, !205, !206, !207, !208, !209}
!211 = !{!"simplePushInfoArrVec[2]", !202, !203, !204, !205, !206, !207, !208, !209}
!212 = !{!"simplePushInfoArrVec[3]", !202, !203, !204, !205, !206, !207, !208, !209}
!213 = !{!"simplePushBufferUsed", i32 0}
!214 = !{!"pushAnalysisWIInfos"}
!215 = !{!"inlineRTGlobalPtrOffset", i32 0}
!216 = !{!"rtSyncSurfPtrOffset", i32 0}
!217 = !{!"psInfo", !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232}
!218 = !{!"BlendStateDisabledMask", i8 0}
!219 = !{!"SkipSrc0Alpha", i1 false}
!220 = !{!"DualSourceBlendingDisabled", i1 false}
!221 = !{!"ForceEnableSimd32", i1 false}
!222 = !{!"outputDepth", i1 false}
!223 = !{!"outputStencil", i1 false}
!224 = !{!"outputMask", i1 false}
!225 = !{!"blendToFillEnabled", i1 false}
!226 = !{!"forceEarlyZ", i1 false}
!227 = !{!"hasVersionedLoop", i1 false}
!228 = !{!"forceSingleSourceRTWAfterDualSourceRTW", i1 false}
!229 = !{!"NumSamples", i8 0}
!230 = !{!"blendOptimizationMode"}
!231 = !{!"colorOutputMask"}
!232 = !{!"WaDisableVRS", i1 false}
!233 = !{!"csInfo", !234, !235, !236, !237, !238, !29, !30, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !60, !250, !251, !252}
!234 = !{!"maxWorkGroupSize", i32 0}
!235 = !{!"waveSize", i32 0}
!236 = !{!"ComputeShaderSecondCompile"}
!237 = !{!"forcedSIMDSize", i8 0}
!238 = !{!"forceTotalGRFNum", i32 0}
!239 = !{!"allowLowerSimd", i1 false}
!240 = !{!"disableSimd32Slicing", i1 false}
!241 = !{!"disableSplitOnSpill", i1 false}
!242 = !{!"enableNewSpillCostFunction", i1 false}
!243 = !{!"forcedVISAPreRAScheduler", i1 false}
!244 = !{!"forceUniformBuffer", i1 false}
!245 = !{!"forceUniformSurfaceSampler", i1 false}
!246 = !{!"disableLocalIdOrderOptimizations", i1 false}
!247 = !{!"disableDispatchAlongY", i1 false}
!248 = !{!"neededThreadIdLayout", i1* null}
!249 = !{!"forceTileYWalk", i1 false}
!250 = !{!"walkOrderEnabled", i1 false}
!251 = !{!"walkOrderOverride", i32 0}
!252 = !{!"ResForHfPacking"}
!253 = !{!"msInfo", !254, !255, !256, !257, !258, !259, !260, !261, !262}
!254 = !{!"PrimitiveTopology", i32 3}
!255 = !{!"MaxNumOfPrimitives", i32 0}
!256 = !{!"MaxNumOfVertices", i32 0}
!257 = !{!"MaxNumOfPerPrimitiveOutputs", i32 0}
!258 = !{!"MaxNumOfPerVertexOutputs", i32 0}
!259 = !{!"WorkGroupSize", i32 0}
!260 = !{!"WorkGroupMemorySizeInBytes", i32 0}
!261 = !{!"IndexFormat", i32 6}
!262 = !{!"SubgroupSize", i32 0}
!263 = !{!"taskInfo", !264, !259, !260, !262}
!264 = !{!"MaxNumOfOutputs", i32 0}
!265 = !{!"NBarrierCnt", i32 0}
!266 = !{!"rtInfo", !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278}
!267 = !{!"RayQueryAllocSizeInBytes", i32 0}
!268 = !{!"NumContinuations", i32 0}
!269 = !{!"RTAsyncStackAddrspace", i32 -1}
!270 = !{!"RTAsyncStackSurfaceStateOffset", i1* null}
!271 = !{!"SWHotZoneAddrspace", i32 -1}
!272 = !{!"SWHotZoneSurfaceStateOffset", i1* null}
!273 = !{!"SWStackAddrspace", i32 -1}
!274 = !{!"SWStackSurfaceStateOffset", i1* null}
!275 = !{!"RTSyncStackAddrspace", i32 -1}
!276 = !{!"RTSyncStackSurfaceStateOffset", i1* null}
!277 = !{!"doSyncDispatchRays", i1 false}
!278 = !{!"MemStyle", !"Xe"}
!279 = !{!"CurUniqueIndirectIdx", i32 0}
!280 = !{!"inlineDynTextures"}
!281 = !{!"inlineResInfoData"}
!282 = !{!"immConstant", !283, !284, !285}
!283 = !{!"data"}
!284 = !{!"sizes"}
!285 = !{!"zeroIdxs"}
!286 = !{!"stringConstants"}
!287 = !{!"inlineBuffers", !288, !292, !293}
!288 = !{!"inlineBuffersVec[0]", !289, !290, !291}
!289 = !{!"alignment", i32 0}
!290 = !{!"allocSize", i64 0}
!291 = !{!"Buffer"}
!292 = !{!"inlineBuffersVec[1]", !289, !290, !291}
!293 = !{!"inlineBuffersVec[2]", !289, !290, !291}
!294 = !{!"GlobalPointerProgramBinaryInfos"}
!295 = !{!"ConstantPointerProgramBinaryInfos"}
!296 = !{!"GlobalBufferAddressRelocInfo"}
!297 = !{!"ConstantBufferAddressRelocInfo"}
!298 = !{!"forceLscCacheList"}
!299 = !{!"SrvMap"}
!300 = !{!"RasterizerOrderedByteAddressBuffer"}
!301 = !{!"RasterizerOrderedViews"}
!302 = !{!"MinNOSPushConstantSize", i32 0}
!303 = !{!"inlineProgramScopeOffsets"}
!304 = !{!"shaderData", !305}
!305 = !{!"numReplicas", i32 0}
!306 = !{!"URBInfo", !307, !308, !309}
!307 = !{!"has64BVertexHeaderInput", i1 false}
!308 = !{!"has64BVertexHeaderOutput", i1 false}
!309 = !{!"hasVertexHeader", i1 true}
!310 = !{!"UseBindlessImage", i1 true}
!311 = !{!"enableRangeReduce", i1 false}
!312 = !{!"allowMatchMadOptimizationforVS", i1 false}
!313 = !{!"disableMatchMadOptimizationForCS", i1 false}
!314 = !{!"disableMemOptforNegativeOffsetLoads", i1 false}
!315 = !{!"enableThreeWayLoadSpiltOpt", i1 false}
!316 = !{!"statefulResourcesNotAliased", i1 false}
!317 = !{!"disableMixMode", i1 false}
!318 = !{!"genericAccessesResolved", i1 false}
!319 = !{!"disableSeparateSpillPvtScratchSpace", i1 false}
!320 = !{!"disableSeparateScratchWA", i1 false}
!321 = !{!"PrivateMemoryPerFG"}
!322 = !{!"m_OptsToDisable"}
!323 = !{!"capabilities", !324}
!324 = !{!"globalVariableDecorationsINTEL", i1 false}
!325 = !{!"m_ShaderResourceViewMcsMask", !326, !327}
!326 = !{!"m_ShaderResourceViewMcsMaskVec[0]", i64 0}
!327 = !{!"m_ShaderResourceViewMcsMaskVec[1]", i64 0}
!328 = !{!"computedDepthMode", i32 0}
!329 = !{!"isHDCFastClearShader", i1 false}
!330 = !{i32 2, i32 0}
!331 = !{!"clang version 14.0.5"}
!332 = !{i32 1, !"wchar_size", i32 4}
